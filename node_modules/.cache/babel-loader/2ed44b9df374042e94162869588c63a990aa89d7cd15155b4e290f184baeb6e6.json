{"ast":null,"code":"var _jsxFileName = \"/Users/perfecto/Documents/Ynov/Year2/devCloud/boilerplate/src/components/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  Tasks,\n  handleStatusChange,\n  handleDelete\n}) {\n  const tasksTodo = Tasks.filter(task => task.status === 'A faire');\n  const tasksEnCours = Tasks.filter(task => task.status === 'En cours');\n  const tasksFait = Tasks.filter(task => task.status === 'Fait');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"A faire\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A faire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), tasksTodo.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          // Assure-toi que chaque tâche a un id unique\n          task: task,\n          index: index,\n          handleStatusChange: handleStatusChange,\n          handleDelete: handleDelete\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"En cours\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), tasksEnCours.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task,\n          index: index,\n          handleStatusChange: handleStatusChange,\n          handleDelete: handleDelete\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"Fait\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Fait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), tasksFait.map((task, index) => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task,\n          index: index,\n          handleStatusChange: handleStatusChange,\n          handleDelete: handleDelete\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","Droppable","jsxDEV","_jsxDEV","TaskList","Tasks","handleStatusChange","handleDelete","tasksTodo","filter","task","status","tasksEnCours","tasksFait","style","display","justifyContent","children","droppableId","provided","ref","innerRef","droppableProps","fileName","_jsxFileName","lineNumber","columnNumber","map","index","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/perfecto/Documents/Ynov/Year2/devCloud/boilerplate/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\nimport TaskItem from './TaskItem';  \nimport { Droppable } from 'react-beautiful-dnd';\n\nfunction TaskList({ Tasks, handleStatusChange, handleDelete }) {\n  const tasksTodo = Tasks.filter(task => task.status === 'A faire');\n  const tasksEnCours = Tasks.filter(task => task.status === 'En cours');\n  const tasksFait = Tasks.filter(task => task.status === 'Fait');\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n      {/* Colonne \"A faire\" */}\n      <Droppable droppableId=\"A faire\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            <h2>A faire</h2>\n            {tasksTodo.map((task, index) => (\n              <TaskItem \n                key={task.id}  // Assure-toi que chaque tâche a un id unique\n                task={task} \n                index={index} \n                handleStatusChange={handleStatusChange} \n                handleDelete={handleDelete}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n\n      {/* Colonne \"En cours\" */}\n      <Droppable droppableId=\"En cours\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            <h2>En cours</h2>\n            {tasksEnCours.map((task, index) => (\n              <TaskItem \n                key={task.id}\n                task={task} \n                index={index} \n                handleStatusChange={handleStatusChange} \n                handleDelete={handleDelete}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n\n      {/* Colonne \"Fait\" */}\n      <Droppable droppableId=\"Fait\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            <h2>Fait</h2>\n            {tasksFait.map((task, index) => (\n              <TaskItem \n                key={task.id}\n                task={task} \n                index={index} \n                handleStatusChange={handleStatusChange} \n                handleDelete={handleDelete}\n              />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}