{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nfunction useTasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n    setHasLoaded(true);\n  }, []);\n  useEffect(() => {\n    if (hasLoaded) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }, [tasks, hasLoaded]);\n  const addTask = (text, status) => {\n    if (text.trim() !== '') {\n      setTasks(prevTasks => [...prevTasks, {\n        id: uuidv4(),\n        text,\n        status\n      }]);\n    }\n  };\n  const updateTaskStatus = (id, newStatus) => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? {\n      ...task,\n      status: newStatus\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n  };\n  return {\n    tasks,\n    addTask,\n    updateTaskStatus,\n    deleteTask\n  };\n}\n_s(useTasks, \"6+0suKMybCyKbaDtNURAVnGxcvY=\");\nexport default useTasks;","map":{"version":3,"names":["useState","useEffect","v4","uuidv4","useTasks","_s","tasks","setTasks","hasLoaded","setHasLoaded","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","addTask","text","status","trim","prevTasks","id","updateTaskStatus","newStatus","map","task","deleteTask","filter"],"sources":["/Users/perfecto/Documents/Ynov/Year2/devCloud/boilerplate/src/hooks/useTasks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction useTasks() {\n  const [tasks, setTasks] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n    setHasLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    if (hasLoaded) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }, [tasks, hasLoaded]);\n\n  const addTask = (text, status) => {\n    if (text.trim() !== '') {\n      setTasks((prevTasks) => [...prevTasks, { id: uuidv4(), text, status }]);\n    }\n  };\n\n  const updateTaskStatus = (id, newStatus) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) => (task.id === id ? { ...task, status: newStatus } : task))\n    );\n  };\n\n  const deleteTask = (id) => {\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== id));\n  };\n\n  return { tasks, addTask, updateTaskStatus, deleteTask };\n}\n\nexport default useTasks;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfH,QAAQ,CAACM,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACnC;IACAD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,EAAE;MACbG,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACV,KAAK,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,CAACA,KAAK,EAAEE,SAAS,CAAC,CAAC;EAEtB,MAAMS,OAAO,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IAChC,IAAID,IAAI,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtBb,QAAQ,CAAEc,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;QAAEC,EAAE,EAAEnB,MAAM,CAAC,CAAC;QAAEe,IAAI;QAAEC;MAAO,CAAC,CAAC,CAAC;IACzE;EACF,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAACD,EAAE,EAAEE,SAAS,KAAK;IAC1CjB,QAAQ,CAAEc,SAAS,IACjBA,SAAS,CAACI,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGI,IAAI;MAAEP,MAAM,EAAEK;IAAU,CAAC,GAAGE,IAAK,CAClF,CAAC;EACH,CAAC;EAED,MAAMC,UAAU,GAAIL,EAAE,IAAK;IACzBf,QAAQ,CAAEc,SAAS,IAAKA,SAAS,CAACO,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EACrE,CAAC;EAED,OAAO;IAAEhB,KAAK;IAAEW,OAAO;IAAEM,gBAAgB;IAAEI;EAAW,CAAC;AACzD;AAACtB,EAAA,CAnCQD,QAAQ;AAqCjB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}